{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","role","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","isInitialized","setIsInitialized","isError","setIsError","loadPeople","getPeopleFromServer","peopleWithParent","find","mom","dad","useEffect","isNoPeopleOnServer","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5cb2cf11.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: FC<Props> = ({\n  person: { slug, sex, name },\n}) => (\n  <Link\n    to={slug}\n    className={classNames(\n      { 'has-text-danger': sex === 'f' },\n    )}\n  >\n    {name}\n  </Link>\n);\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({\n  people,\n}) => {\n  const { slug } = useParams<{ slug: string }>();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames(\n              { 'has-background-warning': person.slug === slug },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {\n                person.mother\n                  ? <PersonLink person={person.mother} />\n                  : person.motherName || '-'\n              }\n            </td>\n            <td>\n              {\n                person.father\n                  ? <PersonLink person={person.father} />\n                  : person.fatherName || '-'\n              }\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    setIsInitialized(false);\n    setIsError(false);\n\n    try {\n      const getPeopleFromServer = await getPeople();\n      const peopleWithParent = getPeopleFromServer.map(person => {\n        const mother = getPeopleFromServer.find(\n          mom => mom.name === person.motherName,\n        );\n        const father = getPeopleFromServer.find(\n          dad => dad.name === person.fatherName,\n        );\n\n        return (\n          {\n            ...person,\n            mother,\n            father,\n          }\n        );\n      });\n\n      setPeople(peopleWithParent);\n      setIsInitialized(true);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isNoPeopleOnServer = !people.length && isInitialized;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <>\n              <PeopleTable people={people} />\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { MainNav } from './components/MainNav';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}